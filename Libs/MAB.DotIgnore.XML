<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MAB.DotIgnore</name>
    </assembly>
    <members>
        <member name="T:MAB.DotIgnore.IgnoreList">
            <summary>
            A list of ignore rules
            </summary>
        </member>
        <member name="P:MAB.DotIgnore.IgnoreList.Rules">
            <summary>
            The individual ignore rules currently loaded into this list
            </summary>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreList.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Create a list of ignore rules to check paths against
            </summary>
            <param name="rules">A list of glob ignore patterns as strings</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreList.#ctor(System.String)">
            <summary>
            Create a list of ignore rules to check paths against
            </summary>
            <param name="ignoreFilePath">Path to a text file containing a list of glob ignore patterns as strings</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreList.AddRule(System.String)">
            <summary>
            Add a rule to the ignore list
            </summary>
            <param name="rule">Glob ignore pattern as string</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreList.AddRules(System.String)">
            <summary>
            Add multiple rules to the ignore list
            </summary>
            <param name="ignoreFilePath">Path to a text file containing a list of glob ignore patterns as strings</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreList.AddRules(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add multiple rules to the ignore list
            </summary>
            <param name="rules">A list of glob ignore patterns as strings</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreList.RemoveRule(System.String)">
            <summary>
            Remove a rule from the ignore list
            </summary>
            <param name="rule">Glob ignore pattern as string</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreList.IsIgnored(System.IO.FileInfo)">
            <summary>
            Check if a file path matches any of the rules in the ignore list
            </summary>
            <param name="file">FileInfo representing the file to chec</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreList.IsIgnored(System.IO.FileInfo,System.Collections.Generic.List{System.String})">
            <summary>
            Check if a directory path matches any of the rules in the ignore list
            </summary>
            <param name="file">FileInfo representing the file to check</param>
            <param name="log">List of strings to append log messages to</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreList.IsIgnored(System.IO.DirectoryInfo)">
            <summary>
            Check if a directory path matches any of the rules in the ignore list
            </summary>
            <param name="directory">DirectoryInfo representing the file to check</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreList.IsIgnored(System.IO.DirectoryInfo,System.Collections.Generic.List{System.String})">
            <summary>
            Check if a directory path matches any of the rules in the ignore list
            </summary>
            <param name="directory">DirectoryInfo representing the file to check</param>
            <param name="log">List of strings to append log messages to</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreList.IsIgnored(System.String,System.Boolean)">
            <summary>
            Check if a string path matches any of the rules in the ignore list
            </summary>
            <param name="path">String representing the path to check</param>
            <param name="pathIsDirectory">Should be set True if the path represents a directory, False if it represents a file</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreList.IsIgnored(System.String,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Check if a string path matches any of the rules in the ignore list
            </summary>
            <param name="path">String representing the path to check</param>
            <param name="pathIsDirectory">Should be set True if the path represents a directory, False if it represents a file</param>
            <param name="log">List of strings to append log messages to</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreList.Clone">
            <summary>
            Create an exact copy of the ignore list
            </summary>
        </member>
        <member name="T:MAB.DotIgnore.IgnoreRule">
            <summary>
            A rule which can be used to determine whether a file path should be ignored
            </summary>
        </member>
        <member name="P:MAB.DotIgnore.IgnoreRule.OriginalPattern">
            <summary>
            The original pattern string passed into the constructor
            </summary>
        </member>
        <member name="P:MAB.DotIgnore.IgnoreRule.Pattern">
            <summary>
            The pre-processed pattern string after basic parsing
            </summary>
        </member>
        <member name="P:MAB.DotIgnore.IgnoreRule.MatchFlags">
            <summary>
            The <see cref="P:MAB.DotIgnore.IgnoreRule.MatchFlags"/> set for this rule
            </summary>
        </member>
        <member name="P:MAB.DotIgnore.IgnoreRule.PatternFlags">
            <summary>
            The <see cref="P:MAB.DotIgnore.IgnoreRule.PatternFlags"/> set for the parsed rule pattern
            </summary>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreRule.#ctor(System.String,MAB.DotIgnore.MatchFlags)">
            <summary>
            Create an individual ignore rule for the specified pattern
            </summary>
            <param name="pattern">A glob pattern specifying file(s) this rule should ignore</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreRule.IsMatch(System.IO.FileInfo)">
            <summary>
            Check if a file path matches the rule glob pattern
            </summary>
            <param name="file">FileInfo representing the file to check</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreRule.IsMatch(System.IO.DirectoryInfo)">
            <summary>
            Check if a directory path matches the rule glob pattern
            </summary>
            <param name="directory">DirectoryInfo representing the directory to check</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreRule.IsMatch(System.String,System.Boolean)">
            <summary>
            Check if a path matches the rule glob pattern
            </summary>
            <param name="path">String representing the path to check</param>
            <param name="pathIsDirectory">Should be set True if the path represents a directory, False if it represents a file</param>
        </member>
        <member name="M:MAB.DotIgnore.IgnoreRule.ToString">
            <summary>
            Return a string representation showing the original pattern, 
            the pre-processed pattern and the regular expression pattern
            </summary>
        </member>
        <member name="T:MAB.DotIgnore.MatchFlags">
            <summary>
            A set of flags determining the behaviour of ignore rule matches
            </summary>
        </member>
        <member name="F:MAB.DotIgnore.MatchFlags.NONE">
            <summary>
            Patterns are case-sensitive, single asterisks in patterns match path slashes
            </summary>
        </member>
        <member name="F:MAB.DotIgnore.MatchFlags.CASEFOLD">
            <summary>
            If set, pattern matches are case-insensitive
            </summary>
        </member>
        <member name="F:MAB.DotIgnore.MatchFlags.PATHNAME">
            <summary>
            If set, single asterisks in patterns should not match path slashes
            </summary>
        </member>
        <member name="T:MAB.DotIgnore.PatternFlags">
            <summary>
            Informational flags telling us about a parsed pattern
            </summary>
        </member>
        <member name="F:MAB.DotIgnore.PatternFlags.NONE">
            <summary>
            Pattern is a basic pattern
            </summary>
        </member>
        <member name="F:MAB.DotIgnore.PatternFlags.NEGATION">
            <summary>
            Pattern starts with '!'
            </summary>
        </member>
        <member name="F:MAB.DotIgnore.PatternFlags.ABSOLUTE_PATH">
            <summary>
            Pattern starts with '/'
            </summary>
        </member>
        <member name="F:MAB.DotIgnore.PatternFlags.DIRECTORY">
            <summary>
            Pattern should match only directories
            </summary>
        </member>
    </members>
</doc>
